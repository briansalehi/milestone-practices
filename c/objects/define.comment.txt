There are 4 types of constants in C:

*    literal constants
* => define preprocessor
*    const keyword
*    enumeration

ref[2]
A #define line defines a symbolic name or symbolic constant to be a particular  
string of characters:

	#define name replacement text

Thereafter, any occurrence of name (not in quotes and not part of another  
name) will be replaced by the corresponding replacement text. The name has  
the same form as a variable name: a sequence of letters and digits that begins  
with a letter. The replacement text can be any sequence of characters; it is not  
limited to numbers.

Symbolic constant names are conventionally written in upper case so they  
can be readily distinguished from lower case variable names.  
Notice that there is no semicolon at the end of a #define line.
end[2]

**#define** is a preprocessor directive that substitutes an expression in compile time.  
Generally, it's just a simple string replacement and has no types.

Constants declared by define preprocessor cannot be modified after their creation,
as they are only string substitutions.
