We need a few basic commands before we can further understand shell features.

<h5>Print Working Directory</h5>
As the name suggests, <i>pwd</i> tells you where you are in the Linux directory
hierarchy.
When you log into a shell, you directly jump into your home directory.
Home directory is also known as  Ìƒ character, normally set to /home/user
directory where user is the name of the user you are logged in to.
dot . indicates current directory and .. indicates parent directory.

<h5>List Files and Directories</h5>
<i>ls</i> command lists the entry of current working directory if no paramters are
given, otherwise it will print the entry of the path you gave it to.

<h5>Change Directory</h5>
<i>cd</i> command is straightforward, it will change your directory to whatever
path you give it to as its paramter.
Of course, the directory must exists or it will complain that no such file or
directory exists.

<h5>Create File</h5>
<i>touch</i> is used to create files.
You can give it multiple file names as paramters and it will create all of
those files.

<h5>Make Directory</h5>
<i>mkdir</i> command makes one or as many directories as you specify in front
of it as parameters.

<h5>Removing File and Directories</h5>
<i>rm</i> command removes files.
To remove directories, <i>rmdir</i> command might be used only if the
directory is empty, otherwise, <i>rm -r</i> command with its option must be
specified.
<i>-r</i> option indicates <i>--recursive</i> which basically means <i>rm</i>
cannot remove many files in one time, but it recursively searches for files in
given directory and remove them one by one.

<h5>Echo Back Something</h5>
<i>echo</i> command might sound irrational at first sight, but it will echo
back whatever you give it to as parameters.
Soon in later chapters we will see that in Bash we can create variables.
To print the value within a variables, we shall use <i>echo</i> as it echoes
back what that variable holds.

<h5>Display File Content</h5>
<i>cat</i> command prints the contents of one or as many files as we specify
as its paramters.
Printing all of the contents of a big text file might not be a good idea.
Later, we will practice commands which gives of enough control to print just a
part of a file which we are looking for.
Of course, printing the contents of a non-printable file, e.g. binary files,
will result in dumping garbage characters on the terminal's output.

<h5>Copy File or Directory</h5>
<i>cp</i> requires source files and the destination path in order to perform a
copy of source files into destination.
To copy directories, -r option must be given in order to recursively copy all
the files within a directory.

<h5>Move File or Directory</h5>
<i>mv</i> command moves files or directories as source into destinaion.
Move command will copy files then eliminates source files.

<h5>Rename File or Directory</h5>
On Linux, we don't have a rename command. Instead, what we do here is to move
files in source path, e.g. current directory, using <i>mv</i> command, and move
them into destination path, e.g. also current directory, with a new name.
