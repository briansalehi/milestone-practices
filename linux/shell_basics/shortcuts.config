## Syntax name for syntax highlighting
## Only specify names supported by prism.js
## List of supported syntaxes:
### bash c cpp asm6502 java python aspnet csharp cmake django dns-zone docker
### go hcl ignore javadoc json json5 kotlin latex makefile markdown matlab
### mongodb nasm nginx objectivec opencl perl php phpdoc plsql powershell
### processing prolog qml r regex ruby rust scala sql swift typescript
### verilog vhdl vim wasm
#SYNTAX=

## Whether source can be executed either as compiled source or interpretable
## Set to false for text files
EXECUTABLE=false

## Whether source should be compiled
## Set false for scripting languages
#COMPILABLE=true

## Program used to interpret or compile the practice file
#COMPILER=
#COMPILER_OPTIONS=
#GENERATES_COMPILATION_ERROR=false

## Order of statements in compilation command
## Available statements: compiler, options, object, source, headers
#COMPILATION_SCHEME="compiler options object source"

## Whether all sources in one line of .index file should appear in linkage
## usually other files are headers only and won't need to be linked to source
#INCLUDES=false

## What is the extension of the object which compiler throws?
## Default is set to .o
#OUTPUT_OBJECT=

## Whether object should be linked after compilation too
## Defaut is set to true
## Set false for scripts
#LINKABLE=true

## Whether linker explicitly specified
## This is only used for compilable sources
#LINKER=
#LINKER_OPTIONS=
#GENERATES_LINKAGE_ERROR=false

## Order of statements in linkage command
## Available statements: linker, options, binary, object, headers, source,
##   location, page
#LINKAGE_SCHEME="linker options binary object headers"

## Wether generated output can run as an executable
#RUNNABLE=true
#RUNNING_OPTIONS=
#GENERATES_RUNTIME_ERROR=false

## Order of statements in running command
## Available statements: compiler, linker, options, binary, object, headers,
##   source, location, page
#RUNNING_SCHEME="binary options"

## Whether program should be run in the background
## Suitable for servers and services which need to wait for clients to compile
## and respond
## Rationally, servers should be compiled and executed first, then clients
#RUN_IN_BACKGROUND=false

## Terminate program in RUNTIME seconds after exection
## Suitable for servers which will not exit after execution
#TERMINATE=false
#TERMINATION_SIGNAL=SIGTERM
#RUNTIME=3

## Whether comments should be verified by .reference.txt files or not.
## This feature will be used in the future
#REFERENCE_VALIDITY=true

## Specify the hardness of this chapter
## This feature will be used in Milestone technical courses and tutorials
#TECHNICAL_LEVEL=

## Design pages as you want
PAGE_TEMPLATE="navigation title reference comment pagination"
#CHAPTER_TEMPLATE="navigation title reference comment pagination"

## DO NOT EDIT!
#VALIDATION_ID=0
