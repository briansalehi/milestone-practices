<p>Awk is a strong text processing programmng language which deserves its own chapter, or maybe books! To learn Awk in depth, visit <a href="/linux-administration/stream-processing/awk">Awk chapter</a>.</p>

<p>Covering everything about Awk in a single page is impossible! So a brief overview of Awk is that it keeps track of line and word numbers. We can easily manipulate text, select lines and fields to print.</p>

<p>In this sample, the easiest task for <code>awk</code> is represented which selects the second line and third field within that line to print.</p>

<p>Using <code>awk</code> is straightforward, you give options to <code>awk</code> and then begin writing <b>Awk scripts</b> surrounded by single quotes.</p>

<pre class="language-bash command-line" data-user="user" data-host="milestone" data-output="">
	<code>
		awk [options] 'scripts'
	</code>
</pre>

<p>In Awk, <code>NR</code> stands for <b>N</b>umber of <b>R</b>ecord which keeps track of the line <code>awk</code> is holding in its buffer to process.</p>

<p><code>NF</code> stands for <b>N</b>umber of <b>F</b>ield which is self explanatory. To print the second field though, we used <code>print $2</code> command in <ode>awk</ode> script.</p>

<p><code>FS</code> stands for <b>F</b>ield <b>S</b>eparator which <code>awk</code> uses to devide fields within a line to process. <code>FS</code> can also be given by <code>-F</code> option.</p>

<p>Here we have set <code>FS=","</code> variable to separate fields within lines and <code>NF=3</code> to select the third field in <code>NR=2</code> second line.</p>
