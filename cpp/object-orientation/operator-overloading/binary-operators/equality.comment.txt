<p>We see that the <b>operator equality</b> <code>operator==</code> checks for equality of days, months and years. This is a correct logic when comparing two dates. And notice how we used one operator to implement another.</p>

<p>What do you expect when the user of class <code>Date</code> compares one instance to another:</p>

<pre class="language-cpp line-numbers">
	<code>
		if (date1 == date2)
		{
			// Do something
		} else {
			// Do something else
		}
	</code>
</pre>

<p>A generic expression of the equality operator is the following:</p>

<pre class="language-cpp line-numbers">
	<code>
		bool operator==(const ClassType&amp; compareTo)
		{
			// comparison code here, return true if equal else false
		}
	</code>
</pre>

<p>The <b>inequality operator</b> can reuse the <b>equality operator</b>:</p>

<pre class="language-cpp line-numbers">
	<code>
		bool operator!=(const ClassType&amp; compareTo)
		{
			// comparison code here, return true if inequal else false
			return ! this->operator==(compareTo);
		}
	</code>
</pre>
