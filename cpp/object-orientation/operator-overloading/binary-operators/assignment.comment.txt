<p>Operators <code>operator-=</code>, <code>operator+=</code> and similar can be overloaded in a class. Notice that this class is far away from being a perfect <code>Date</code> class, days can exceed 31 and values are not controlled. So just take advantage of learning <b>operator overloading</b> not implementing a <code>Date</code> class.</p>

<p>Operator overloading is a powerful mechanism, but it is easily abused. It can be very confusing for someone reading your program to find that familiar operations such as <code>operator+</code> and <code>operator/</code> have been assigned new and possibly confusing meanings.</p>  

<p>Good programmers usually restrict operator overloading to certain general purpose operators such as <code>operator const char*</code> (conversion), <code>operator=</code> (assignment), <code>operator==</code> (equality), <code>operator[]</code> (subscript).</p>
