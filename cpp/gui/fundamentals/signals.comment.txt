<p>
GUI toolkits usually provide a means to react to things that occur within an application.<br/>
One way to implement this is by using the design pattern called the <b>Observer Pattern</b>.
</p>

![observer-pattern-in-qt.png]

<p>A <b>signal</b> is a message that is passed to communicate that the state of an object has changed. This signal may carry information about the change that has occurred.</p>

<p>A <b>slot</b> is a specific function of an object that is called whenever a certain signal has been emitted. Since slots are functions, they will embody lines of code that perform an action, such as closing a window, disabling a button, and sending an email, to mention but a few.</p>

<cite>An implementation sample of signals and slots</cite>
<pre class="language-cpp">
	<code>
		connect(senderObject, SIGNAL(senderMethod), receiverObject, SLOT(receiverMethod));
	</code>
</pre>

<p>It is possible to connect one signal to more than one slot. This involves repeating the <code>QObject::connect()</code> call and, in each instance, specifying the slot that should be called when a particular signal has been emitted.</p>
