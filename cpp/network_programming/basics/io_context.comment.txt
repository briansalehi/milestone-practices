All programs that use asio need to have at least one **io_context** object.
This class provides access to I/O functionality.
We declare an object of this type first thing in the main function.

Next we declare an object of type **boost::asio::steady_timer**.
The core asio classes that provide I/O functionality (or as in this case timer functionality)
always take a reference to an io_context as their first constructor argument.
The second argument to the constructor sets the timer to expire 5 seconds from now.

In this simple example we perform a blocking wait on the timer.
That is, the call to **steady_timer::wait()** will not return until the timer has expired,
5 seconds after it was created (i.e. not from when the wait starts).

A timer is always in one of two states: "expired" or "not expired".
If the **steady_timer::wait()** function is called on an expired timer, it will return immediately.
