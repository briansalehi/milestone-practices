<p><code>auto</code> type is a way to let compiler deduce a type and replace it in compile type. Using auto requires you to initialize the variable for the compiler that uses this initial value in deciding what the variable type can be. When you donâ€™t initialize a variable of type <code>auto</code>, you get a compile error.</p>

<p>Using <code>auto</code> type sometimes makes your code shorter, specially when it comes to <a href="/cpp/stl/iterators">iterators</a>, which will be discussed later. But just like anything in your daily life, type <code>auto</code> has its cons too. Your code might look easier to read, but be aware that using too many <code>auto</code> types will make types hard to guess and soon your program will look confusing, as all types are no longer explicitely visible! Personally, I prefer using explicit types wherever possible, even if they make my code longer, at least I won't end up guessing my variable types.</p>
