Note that default values are only set in <b>function declarations</b>,
not <b>function definitions</b>.

You can have multiple parameters with default values; however, these should
all be at the tail end of the parameter list.

That is, you can't do this:  

<pre class="language-cpp line-numbers">
	<code>
		void function(int x = 1, int y);
	</code>
</pre>

Functions have a special concept named <b>signature</b>, to help compilers
distinguish the functions with the same name but different return types or
number of arguments or different types of arguments in C++.

A function signature is the contained of types used to define function's
return type, its arguments and order of them.
So a function like <i>void function(int x, int y)</i> has a signature of
return type void and two int arguments.

By using a default value, you actually change the function's signature, so
these two functions are identical:

<pre class="language-cpp line-numbers">
	<code>
		void function(int x, int y = 1);
		void function(int x);
	</code>
</pre>

You should remember this when using
<a href="/cpp/fundamentals/functions/overloading">function overloading</a>
which will be discussed later.
