In addition to sequence operations and list methods, Python includes a more
advanced operation known as a list comprehension expression, which turns out
to be a powerful way to process structures like our matrix.

Suppose, for instance, that we need to extract the second column of our
sample matrix.
It’s easy to grab rows by simple indexing because the matrix is stored by
rows, but it’s almost as easy to get a column with a list comprehension.

In Python 2.7 and 3.X, comprehension syntax can also be used to create sets
and dictionaries.

In fact, lists, sets, dictionaries, and generators can all be built with
comprehensions in 3.X and 2.7
