Python dictionaries are something completely different, they are not sequences
at all, but are instead known as mappings.
Mappings are also collections of other objects, but they store objects by
key instead of by relative position.
In fact, mappings don’t maintain any reliable left-to-right order;
they simply map keys to associated values.
Dictionaries, the only mapping type in Python’s core objects set, are also
mutable: like lists, they may be changed in place and can grow and shrink
on demand.
Also like lists, they are a flexible tool for representing collections, but
their more mnemonic keys are better suited when a collection’s items
are named or labeled—fields of a database record, for example.

Unlike out-of-bounds assignments in lists, which are forbidden, assignments to
new dictionary keys create those keys.
